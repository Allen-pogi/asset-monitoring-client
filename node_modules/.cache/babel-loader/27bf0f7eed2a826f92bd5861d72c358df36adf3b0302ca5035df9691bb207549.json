{"ast":null,"code":"var _jsxFileName = \"C:\\\\asset-monitoring-client\\\\src\\\\cameraTest.jsx\";\nimport React from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraTest = () => {\n  const handleScan = (result, error) => {\n    if (!!result) console.log(\"QR Result:\", (result === null || result === void 0 ? void 0 : result.text) || result);\n    if (error) console.warn(\"QR Error:\", error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"300px\",\n      height: \"300px\",\n      border: \"2px solid gray\"\n    },\n    children: /*#__PURE__*/_jsxDEV(QrReader, {\n      onResult: handleCameraScan,\n      constraints: {\n        facingMode: \"environment\"\n      },\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      scanDelay: 300 // ensures continuous scanning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = CameraTest;\nexport default CameraTest;\nvar _c;\n$RefreshReg$(_c, \"CameraTest\");","map":{"version":3,"names":["React","QrReader","jsxDEV","_jsxDEV","CameraTest","handleScan","result","error","console","log","text","warn","style","width","height","border","children","onResult","handleCameraScan","constraints","facingMode","scanDelay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/asset-monitoring-client/src/cameraTest.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { QrReader } from \"react-qr-reader\";\r\n\r\nconst CameraTest = () => {\r\n  const handleScan = (result, error) => {\r\n    if (!!result) console.log(\"QR Result:\", result?.text || result);\r\n    if (error) console.warn(\"QR Error:\", error);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"300px\", height: \"300px\", border: \"2px solid gray\" }}>\r\n      <QrReader\r\n        onResult={handleCameraScan}\r\n        constraints={{ facingMode: \"environment\" }}\r\n        style={{ width: \"100%\", height: \"100%\" }}\r\n        scanDelay={300} // ensures continuous scanning\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraTest;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IACpC,IAAI,CAAC,CAACD,MAAM,EAAEE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,IAAI,KAAIJ,MAAM,CAAC;IAC/D,IAAIC,KAAK,EAAEC,OAAO,CAACG,IAAI,CAAC,WAAW,EAAEJ,KAAK,CAAC;EAC7C,CAAC;EAED,oBACEJ,OAAA;IAAKS,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAiB,CAAE;IAAAC,QAAA,eACxEb,OAAA,CAACF,QAAQ;MACPgB,QAAQ,EAAEC,gBAAiB;MAC3BC,WAAW,EAAE;QAAEC,UAAU,EAAE;MAAc,CAAE;MAC3CR,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO,CAAE;MACzCO,SAAS,EAAE,GAAI,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAhBItB,UAAU;AAkBhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}