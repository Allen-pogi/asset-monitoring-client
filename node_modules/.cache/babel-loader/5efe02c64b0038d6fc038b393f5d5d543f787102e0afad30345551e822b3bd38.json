{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import localforage from\"localforage\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TransactionsOffline=()=>{const[transactions,setTransactions]=useState([]);const[loading,setLoading]=useState(true);const fetchAndStoreTransactions=async()=>{try{// Step 1: Load IndexedDB first (instant offline display)\nconst localData=await localforage.getItem(\"transactions\");setTransactions(Array.isArray(localData)?localData:[]);// Step 2: Fetch fresh data from backend\nconst response=await fetch(\"http://localhost:5000/api/transactions/all\");const data=await response.json();const txArray=Array.isArray(data.transactions)?data.transactions:[];await localforage.setItem(\"transactions\",txArray);setTransactions(txArray);// update with latest\nconsole.log(\"Fetched from backend and stored locally\");}catch(err){console.log(\"Offline or fetch failed, using IndexedDB\",err);}finally{setLoading(false);// always hide loading\n}};useEffect(()=>{fetchAndStoreTransactions();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Transactions (Offline Ready)\"}),loading&&transactions.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsxs(\"table\",{border:\"1\",cellPadding:\"5\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Details\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:transactions.map(tx=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:tx._id}),/*#__PURE__*/_jsx(\"td\",{children:JSON.stringify(tx)})]},tx._id))})]})]});};export default TransactionsOffline;","map":{"version":3,"names":["React","useEffect","useState","localforage","jsx","_jsx","jsxs","_jsxs","TransactionsOffline","transactions","setTransactions","loading","setLoading","fetchAndStoreTransactions","localData","getItem","Array","isArray","response","fetch","data","json","txArray","setItem","console","log","err","children","length","border","cellPadding","map","tx","_id","JSON","stringify"],"sources":["C:/asset-monitoring-client/src/sample.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport localforage from \"localforage\";\r\n\r\nconst TransactionsOffline = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchAndStoreTransactions = async () => {\r\n    try {\r\n      // Step 1: Load IndexedDB first (instant offline display)\r\n      const localData = await localforage.getItem(\"transactions\");\r\n      setTransactions(Array.isArray(localData) ? localData : []);\r\n\r\n      // Step 2: Fetch fresh data from backend\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/transactions/all\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      const txArray = Array.isArray(data.transactions) ? data.transactions : [];\r\n      await localforage.setItem(\"transactions\", txArray);\r\n      setTransactions(txArray); // update with latest\r\n      console.log(\"Fetched from backend and stored locally\");\r\n    } catch (err) {\r\n      console.log(\"Offline or fetch failed, using IndexedDB\", err);\r\n    } finally {\r\n      setLoading(false); // always hide loading\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAndStoreTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Transactions (Offline Ready)</h1>\r\n      {loading && transactions.length === 0 ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <table border=\"1\" cellPadding=\"5\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Details</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((tx) => (\r\n              <tr key={tx._id}>\r\n                <td>{tx._id}</td>\r\n                <td>{JSON.stringify(tx)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsOffline;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAW,yBAAyB,CAAG,KAAAA,CAAA,GAAY,CAC5C,GAAI,CACF;AACA,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAX,WAAW,CAACY,OAAO,CAAC,cAAc,CAAC,CAC3DL,eAAe,CAACM,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,CAAGA,SAAS,CAAG,EAAE,CAAC,CAE1D;AACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAC1B,4CACF,CAAC,CACD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAElC,KAAM,CAAAC,OAAO,CAAGN,KAAK,CAACC,OAAO,CAACG,IAAI,CAACX,YAAY,CAAC,CAAGW,IAAI,CAACX,YAAY,CAAG,EAAE,CACzE,KAAM,CAAAN,WAAW,CAACoB,OAAO,CAAC,cAAc,CAAED,OAAO,CAAC,CAClDZ,eAAe,CAACY,OAAO,CAAC,CAAE;AAC1BE,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC,CACxD,CAAE,MAAOC,GAAG,CAAE,CACZF,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAEC,GAAG,CAAC,CAC9D,CAAC,OAAS,CACRd,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CACF,CAAC,CAEDX,SAAS,CAAC,IAAM,CACdY,yBAAyB,CAAC,CAAC,CAC7B,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEN,KAAA,QAAAoB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CAAI,8BAA4B,CAAI,CAAC,CACpChB,OAAO,EAAIF,YAAY,CAACmB,MAAM,GAAK,CAAC,cACnCvB,IAAA,MAAAsB,QAAA,CAAG,YAAU,CAAG,CAAC,cAEjBpB,KAAA,UAAOsB,MAAM,CAAC,GAAG,CAACC,WAAW,CAAC,GAAG,CAAAH,QAAA,eAC/BtB,IAAA,UAAAsB,QAAA,cACEpB,KAAA,OAAAoB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CAAI,IAAE,CAAI,CAAC,cACXtB,IAAA,OAAAsB,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRtB,IAAA,UAAAsB,QAAA,CACGlB,YAAY,CAACsB,GAAG,CAAEC,EAAE,eACnBzB,KAAA,OAAAoB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CAAKK,EAAE,CAACC,GAAG,CAAK,CAAC,cACjB5B,IAAA,OAAAsB,QAAA,CAAKO,IAAI,CAACC,SAAS,CAACH,EAAE,CAAC,CAAK,CAAC,GAFtBA,EAAE,CAACC,GAGR,CACL,CAAC,CACG,CAAC,EACH,CACR,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}