{"ast":null,"code":"var _jsxFileName = \"C:\\\\asset-monitoring-client\\\\src\\\\sample.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport localforage from \"localforage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsOffline = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchAndStoreTransactions = async () => {\n    try {\n      // Step 1: Load IndexedDB first (instant offline display)\n      const localData = await localforage.getItem(\"transactions\");\n      setTransactions(Array.isArray(localData) ? localData : []);\n\n      // Step 2: Fetch fresh data from backend\n      const response = await fetch(\"http://localhost:5000/api/transactions/all\");\n      const data = await response.json();\n      const txArray = Array.isArray(data.transactions) ? data.transactions : [];\n      await localforage.setItem(\"transactions\", txArray);\n      setTransactions(txArray); // update with latest\n      console.log(\"Fetched from backend and stored locally\");\n    } catch (err) {\n      console.log(\"Offline or fetch failed, using IndexedDB\", err);\n    } finally {\n      setLoading(false); // always hide loading\n    }\n  };\n  useEffect(() => {\n    fetchAndStoreTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transactions (Offline Ready)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading && transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(tx => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: tx._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: JSON.stringify(tx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, tx._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsOffline, \"DUmkRmOc9OB7ZZSQstrrGiz1MwE=\");\n_c = TransactionsOffline;\nexport default TransactionsOffline;\nvar _c;\n$RefreshReg$(_c, \"TransactionsOffline\");","map":{"version":3,"names":["React","useEffect","useState","localforage","jsxDEV","_jsxDEV","TransactionsOffline","_s","transactions","setTransactions","loading","setLoading","fetchAndStoreTransactions","localData","getItem","Array","isArray","response","fetch","data","json","txArray","setItem","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","border","cellPadding","map","tx","_id","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/asset-monitoring-client/src/sample.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport localforage from \"localforage\";\r\n\r\nconst TransactionsOffline = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchAndStoreTransactions = async () => {\r\n    try {\r\n      // Step 1: Load IndexedDB first (instant offline display)\r\n      const localData = await localforage.getItem(\"transactions\");\r\n      setTransactions(Array.isArray(localData) ? localData : []);\r\n\r\n      // Step 2: Fetch fresh data from backend\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/transactions/all\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      const txArray = Array.isArray(data.transactions) ? data.transactions : [];\r\n      await localforage.setItem(\"transactions\", txArray);\r\n      setTransactions(txArray); // update with latest\r\n      console.log(\"Fetched from backend and stored locally\");\r\n    } catch (err) {\r\n      console.log(\"Offline or fetch failed, using IndexedDB\", err);\r\n    } finally {\r\n      setLoading(false); // always hide loading\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAndStoreTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Transactions (Offline Ready)</h1>\r\n      {loading && transactions.length === 0 ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <table border=\"1\" cellPadding=\"5\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Details</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {transactions.map((tx) => (\r\n              <tr key={tx._id}>\r\n                <td>{tx._id}</td>\r\n                <td>{JSON.stringify(tx)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsOffline;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}