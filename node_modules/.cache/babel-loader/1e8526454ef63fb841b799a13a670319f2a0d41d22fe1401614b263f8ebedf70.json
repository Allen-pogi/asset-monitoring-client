{"ast":null,"code":"var _jsxFileName = \"C:\\\\asset-monitoring-client\\\\src\\\\scanner.jsx\",\n  _s = $RefreshSig$();\n// src/components/HardwareQRScanner.jsx\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState(null);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    // Focus input on mount so scanner works immediately\n    inputRef.current.focus();\n  }, []);\n  const handleInput = e => {\n    const value = e.target.value.trim();\n    if (!value) return;\n    try {\n      const parsed = JSON.parse(value); // parse the JSON from QR\n      setScannedData(parsed);\n    } catch (err) {\n      console.error(\"Invalid QR data:\", err);\n      setScannedData({\n        error: \"Invalid QR Code\"\n      });\n    }\n    e.target.value = \"\"; // clear input for next scan\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-background-light dark:bg-background-dark p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-black dark:text-white mb-4\",\n      children: \"Hardware QR Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      onChange: handleInput,\n      className: \"border border-slate-300 dark:border-slate-600 rounded p-2 mb-4 w-0 h-0 opacity-0\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-white dark:bg-slate-800 rounded shadow w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-semibold text-lg mb-2\",\n        children: \"Scanned Asset Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), scannedData.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: scannedData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1 text-black dark:text-white text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Serial Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), \" \", scannedData.serialNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), \" \", scannedData.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Scanner, \"/4GWvhShQHMfSCKBmrYY5Mf2j7E=\");\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Scanner","_s","scannedData","setScannedData","inputRef","current","focus","handleInput","e","value","target","trim","parsed","JSON","parse","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","autoFocus","serialNumber","category","_c","$RefreshReg$"],"sources":["C:/asset-monitoring-client/src/scanner.jsx"],"sourcesContent":["// src/components/HardwareQRScanner.jsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Scanner = () => {\r\n  const [scannedData, setScannedData] = useState(null);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Focus input on mount so scanner works immediately\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  const handleInput = (e) => {\r\n    const value = e.target.value.trim();\r\n    if (!value) return;\r\n\r\n    try {\r\n      const parsed = JSON.parse(value); // parse the JSON from QR\r\n      setScannedData(parsed);\r\n    } catch (err) {\r\n      console.error(\"Invalid QR data:\", err);\r\n      setScannedData({ error: \"Invalid QR Code\" });\r\n    }\r\n\r\n    e.target.value = \"\"; // clear input for next scan\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-background-light dark:bg-background-dark p-4\">\r\n      <h1 className=\"text-2xl font-bold text-black dark:text-white mb-4\">\r\n        Hardware QR Scanner\r\n      </h1>\r\n\r\n      {/* Hidden input for scanner */}\r\n      <input\r\n        ref={inputRef}\r\n        onChange={handleInput}\r\n        className=\"border border-slate-300 dark:border-slate-600 rounded p-2 mb-4 w-0 h-0 opacity-0\"\r\n        autoFocus\r\n      />\r\n\r\n      {scannedData && (\r\n        <div className=\"mt-4 p-4 bg-white dark:bg-slate-800 rounded shadow w-full max-w-md\">\r\n          <h2 className=\"font-semibold text-lg mb-2\">Scanned Asset Info</h2>\r\n          {scannedData.error ? (\r\n            <p className=\"text-red-500\">{scannedData.error}</p>\r\n          ) : (\r\n            <ul className=\"space-y-1 text-black dark:text-white text-sm\">\r\n              <li>\r\n                <strong>Serial Number:</strong> {scannedData.serialNumber}\r\n              </li>\r\n              <li>\r\n                <strong>Category:</strong> {scannedData.category}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}